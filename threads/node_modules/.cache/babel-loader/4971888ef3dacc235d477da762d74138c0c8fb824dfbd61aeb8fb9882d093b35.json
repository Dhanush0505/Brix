{"ast":null,"code":"var _jsxFileName = \"D:\\\\Brix\\\\Client\\\\threads\\\\src\\\\Components\\\\CommentSection.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/CommentSection.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [text, setText] = useState('');\n  const addComment = e => {\n    e.preventDefault();\n    if (text.trim()) {\n      const newComment = {\n        id: Date.now(),\n        text,\n        replies: []\n      };\n      setComments([...comments, newComment]);\n      setText('');\n    }\n  };\n  const addReply = (commentId, replyText) => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === commentId) {\n        const newReply = {\n          id: Date.now(),\n          text: replyText,\n          replies: []\n        };\n        return {\n          ...comment,\n          replies: [...comment.replies, newReply]\n        };\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Threads Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addComment,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Write a comment...\",\n        required: true,\n        style: {\n          width: '100%',\n          height: '50px',\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment,\n        onReply: addReply\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentSection, \"GpI3ULfBpXYFXjiQX3gKnwfFcqs=\");\n_c = CommentSection;\nconst Comment = ({\n  comment,\n  onReply\n}) => {\n  _s2();\n  const [replyText, setReplyText] = useState('');\n  const [showReplyForm, setShowReplyForm] = useState(false);\n  const handleReply = e => {\n    e.preventDefault();\n    if (replyText.trim()) {\n      onReply(comment.id, replyText);\n      setReplyText('');\n      setShowReplyForm(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '20px',\n      borderBottom: '1px solid #ddd',\n      padding: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: comment.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowReplyForm(!showReplyForm),\n      children: showReplyForm ? 'Cancel' : 'Reply'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), showReplyForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleReply,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: replyText,\n        onChange: e => setReplyText(e.target.value),\n        placeholder: \"Write a reply...\",\n        required: true,\n        style: {\n          width: '100%',\n          height: '40px',\n          marginTop: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comment.replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '40px',\n          borderBottom: '1px solid #eee',\n          padding: '5px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this)\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s2(Comment, \"rrxZKDqxvaqCu2s+7BErWqDEudo=\");\n_c2 = Comment;\nexport default CommentSection;\nvar _c, _c2;\n$RefreshReg$(_c, \"CommentSection\");\n$RefreshReg$(_c2, \"Comment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CommentSection","_s","comments","setComments","text","setText","addComment","e","preventDefault","trim","newComment","id","Date","now","replies","addReply","commentId","replyText","updatedComments","map","comment","newReply","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","width","height","marginBottom","type","Comment","onReply","_c","_s2","setReplyText","showReplyForm","setShowReplyForm","handleReply","marginLeft","borderBottom","onClick","marginTop","length","reply","_c2","$RefreshReg$"],"sources":["D:/Brix/Client/threads/src/Components/CommentSection.js"],"sourcesContent":["// src/CommentSection.js\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst CommentSection = () => {\r\n    const [comments, setComments] = useState([]);\r\n    const [text, setText] = useState('');\r\n\r\n    const addComment = (e) => {\r\n        e.preventDefault();\r\n        if (text.trim()) {\r\n            const newComment = {\r\n                id: Date.now(),\r\n                text,\r\n                replies: [],\r\n            };\r\n            setComments([...comments, newComment]);\r\n            setText('');\r\n        }\r\n    };\r\n\r\n    const addReply = (commentId, replyText) => {\r\n        const updatedComments = comments.map((comment) => {\r\n            if (comment.id === commentId) {\r\n                const newReply = {\r\n                    id: Date.now(),\r\n                    text: replyText,\r\n                    replies: [],\r\n                };\r\n                return { ...comment, replies: [...comment.replies, newReply] };\r\n            }\r\n            return comment;\r\n        });\r\n        setComments(updatedComments);\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px' }}>\r\n            <h1>Threads Clone</h1>\r\n            <form onSubmit={addComment}>\r\n                <textarea\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                    placeholder=\"Write a comment...\"\r\n                    required\r\n                    style={{ width: '100%', height: '50px', marginBottom: '10px' }}\r\n                />\r\n                <button type=\"submit\">Post Comment</button>\r\n            </form>\r\n            <div>\r\n                {comments.map((comment) => (\r\n                    <Comment\r\n                        key={comment.id}\r\n                        comment={comment}\r\n                        onReply={addReply}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Comment = ({ comment, onReply }) => {\r\n    const [replyText, setReplyText] = useState('');\r\n    const [showReplyForm, setShowReplyForm] = useState(false);\r\n\r\n    const handleReply = (e) => {\r\n        e.preventDefault();\r\n        if (replyText.trim()) {\r\n            onReply(comment.id, replyText);\r\n            setReplyText('');\r\n            setShowReplyForm(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ marginLeft: '20px', borderBottom: '1px solid #ddd', padding: '10px' }}>\r\n            <p>{comment.text}</p>\r\n            <button onClick={() => setShowReplyForm(!showReplyForm)}>\r\n                {showReplyForm ? 'Cancel' : 'Reply'}\r\n            </button>\r\n            {showReplyForm && (\r\n                <form onSubmit={handleReply}>\r\n                    <textarea\r\n                        value={replyText}\r\n                        onChange={(e) => setReplyText(e.target.value)}\r\n                        placeholder=\"Write a reply...\"\r\n                        required\r\n                        style={{ width: '100%', height: '40px', marginTop: '10px' }}\r\n                    />\r\n                    <button type=\"submit\">Post Reply</button>\r\n                </form>\r\n            )}\r\n            {comment.replies.length > 0 && (\r\n                <div>\r\n                    {comment.replies.map((reply) => (\r\n                        <div key={reply.id} style={{ marginLeft: '40px', borderBottom: '1px solid #eee', padding: '5px' }}>\r\n                            <p>{reply.text}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}