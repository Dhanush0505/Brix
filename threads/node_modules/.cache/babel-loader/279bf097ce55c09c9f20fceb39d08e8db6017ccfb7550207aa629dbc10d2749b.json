{"ast":null,"code":"var _jsxFileName = \"D:\\\\Brix\\\\Client\\\\threads\\\\src\\\\Components\\\\CommentSection.js\",\n  _s = $RefreshSig$();\n// src/CommentSection.js\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './CommentSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [text, setText] = useState('');\n  const addComment = e => {\n    e.preventDefault();\n    if (text.trim()) {\n      const newComment = {\n        id: Date.now(),\n        text,\n        replies: []\n      };\n      setComments([...comments, newComment]);\n      setText('');\n    }\n  };\n  const addReply = (commentId, replyText) => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === commentId) {\n        const newReply = {\n          id: Date.now(),\n          text: replyText,\n          replies: []\n        };\n        return {\n          ...comment,\n          replies: [...comment.replies, newReply]\n        };\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n  };\n  const editComment = (commentId, newText) => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === commentId) {\n        return {\n          ...comment,\n          text: newText\n        };\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n  };\n  const deleteComment = commentId => {\n    setComments(comments.filter(comment => comment.id !== commentId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Threads App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addComment,\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Write a comment...\",\n        required: true,\n        style: {\n          width: '80%',\n          maxWidth: '400px',\n          height: '50px',\n          marginBottom: '10px'\n        } // Minimized width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          alignSelf: 'center'\n        },\n        children: \"Post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment,\n        onReply: addReply,\n        onEdit: editComment,\n        onDelete: deleteComment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n// Rest of the code remains unchanged...\n_s(CommentSection, \"GpI3ULfBpXYFXjiQX3gKnwfFcqs=\");\n_c = CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faEdit","faTrash","jsxDEV","_jsxDEV","CommentSection","_s","comments","setComments","text","setText","addComment","e","preventDefault","trim","newComment","id","Date","now","replies","addReply","commentId","replyText","updatedComments","map","comment","newReply","editComment","newText","deleteComment","filter","style","padding","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","display","flexDirection","alignItems","value","onChange","target","placeholder","required","width","maxWidth","height","marginBottom","type","alignSelf","className","Comment","onReply","onEdit","onDelete","_c","$RefreshReg$"],"sources":["D:/Brix/Client/threads/src/Components/CommentSection.js"],"sourcesContent":["// src/CommentSection.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport './CommentSection.css';\r\n\r\nconst CommentSection = () => {\r\n    const [comments, setComments] = useState([]);\r\n    const [text, setText] = useState('');\r\n\r\n    const addComment = (e) => {\r\n        e.preventDefault();\r\n        if (text.trim()) {\r\n            const newComment = {\r\n                id: Date.now(),\r\n                text,\r\n                replies: [],\r\n            };\r\n            setComments([...comments, newComment]);\r\n            setText('');\r\n        }\r\n    };\r\n\r\n    const addReply = (commentId, replyText) => {\r\n        const updatedComments = comments.map((comment) => {\r\n            if (comment.id === commentId) {\r\n                const newReply = {\r\n                    id: Date.now(),\r\n                    text: replyText,\r\n                    replies: [],\r\n                };\r\n                return { ...comment, replies: [...comment.replies, newReply] };\r\n            }\r\n            return comment;\r\n        });\r\n        setComments(updatedComments);\r\n    };\r\n\r\n    const editComment = (commentId, newText) => {\r\n        const updatedComments = comments.map((comment) => {\r\n            if (comment.id === commentId) {\r\n                return { ...comment, text: newText };\r\n            }\r\n            return comment;\r\n        });\r\n        setComments(updatedComments);\r\n    };\r\n\r\n    const deleteComment = (commentId) => {\r\n        setComments(comments.filter(comment => comment.id !== commentId));\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px' }}>\r\n            <h1 style={{ textAlign: 'center' }}>Threads App</h1>\r\n            <form onSubmit={addComment} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                <textarea\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                    placeholder=\"Write a comment...\"\r\n                    required\r\n                    style={{ width: '80%', maxWidth: '400px', height: '50px', marginBottom: '10px' }} // Minimized width\r\n                />\r\n                <button type=\"submit\" style={{ alignSelf: 'center' }}>Post Comment</button>\r\n            </form>\r\n            <div className=\"comment-section\">\r\n                {comments.map((comment) => (\r\n                    <Comment\r\n                        key={comment.id}\r\n                        comment={comment}\r\n                        onReply={addReply}\r\n                        onEdit={editComment}\r\n                        onDelete={deleteComment}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Rest of the code remains unchanged...\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,EAAEC,OAAO,QAAQ,mCAAmC;AACnE,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,UAAU,GAAIC,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIJ,IAAI,CAACK,IAAI,CAAC,CAAC,EAAE;MACb,MAAMC,UAAU,GAAG;QACfC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdT,IAAI;QACJU,OAAO,EAAE;MACb,CAAC;MACDX,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEQ,UAAU,CAAC,CAAC;MACtCL,OAAO,CAAC,EAAE,CAAC;IACf;EACJ,CAAC;EAED,MAAMU,QAAQ,GAAGA,CAACC,SAAS,EAAEC,SAAS,KAAK;IACvC,MAAMC,eAAe,GAAGhB,QAAQ,CAACiB,GAAG,CAAEC,OAAO,IAAK;MAC9C,IAAIA,OAAO,CAACT,EAAE,KAAKK,SAAS,EAAE;QAC1B,MAAMK,QAAQ,GAAG;UACbV,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UACdT,IAAI,EAAEa,SAAS;UACfH,OAAO,EAAE;QACb,CAAC;QACD,OAAO;UAAE,GAAGM,OAAO;UAAEN,OAAO,EAAE,CAAC,GAAGM,OAAO,CAACN,OAAO,EAAEO,QAAQ;QAAE,CAAC;MAClE;MACA,OAAOD,OAAO;IAClB,CAAC,CAAC;IACFjB,WAAW,CAACe,eAAe,CAAC;EAChC,CAAC;EAED,MAAMI,WAAW,GAAGA,CAACN,SAAS,EAAEO,OAAO,KAAK;IACxC,MAAML,eAAe,GAAGhB,QAAQ,CAACiB,GAAG,CAAEC,OAAO,IAAK;MAC9C,IAAIA,OAAO,CAACT,EAAE,KAAKK,SAAS,EAAE;QAC1B,OAAO;UAAE,GAAGI,OAAO;UAAEhB,IAAI,EAAEmB;QAAQ,CAAC;MACxC;MACA,OAAOH,OAAO;IAClB,CAAC,CAAC;IACFjB,WAAW,CAACe,eAAe,CAAC;EAChC,CAAC;EAED,MAAMM,aAAa,GAAIR,SAAS,IAAK;IACjCb,WAAW,CAACD,QAAQ,CAACuB,MAAM,CAACL,OAAO,IAAIA,OAAO,CAACT,EAAE,KAAKK,SAAS,CAAC,CAAC;EACrE,CAAC;EAED,oBACIjB,OAAA;IAAK2B,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5B7B,OAAA;MAAI2B,KAAK,EAAE;QAAEG,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpDlC,OAAA;MAAMmC,QAAQ,EAAE5B,UAAW;MAACoB,KAAK,EAAE;QAAES,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAT,QAAA,gBAClG7B,OAAA;QACIuC,KAAK,EAAElC,IAAK;QACZmC,QAAQ,EAAGhC,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACiC,MAAM,CAACF,KAAK,CAAE;QACzCG,WAAW,EAAC,oBAAoB;QAChCC,QAAQ;QACRhB,KAAK,EAAE;UAAEiB,KAAK,EAAE,KAAK;UAAEC,QAAQ,EAAE,OAAO;UAAEC,MAAM,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAO,CAAE,CAAC;MAAA;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CAAC,eACFlC,OAAA;QAAQgD,IAAI,EAAC,QAAQ;QAACrB,KAAK,EAAE;UAAEsB,SAAS,EAAE;QAAS,CAAE;QAAApB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eACPlC,OAAA;MAAKkD,SAAS,EAAC,iBAAiB;MAAArB,QAAA,EAC3B1B,QAAQ,CAACiB,GAAG,CAAEC,OAAO,iBAClBrB,OAAA,CAACmD,OAAO;QAEJ9B,OAAO,EAAEA,OAAQ;QACjB+B,OAAO,EAAEpC,QAAS;QAClBqC,MAAM,EAAE9B,WAAY;QACpB+B,QAAQ,EAAE7B;MAAc,GAJnBJ,OAAO,CAACT,EAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKlB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;;AAED;AAAAhC,EAAA,CA1EMD,cAAc;AAAAsD,EAAA,GAAdtD,cAAc;AAAA,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}